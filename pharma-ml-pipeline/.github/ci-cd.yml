name: Pharma ML Pipeline CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r requirements.txt
    - name: Lint with flake8
      run: flake8 src tests
    - name: Check formatting with black
      run: black --check src tests
    - name: Check imports with isort
      run: isort --check-only --profile black src tests

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements.txt
    - name: Test with pytest
      run: pytest --cov=src tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.ACR_NAME }}.azurecr.io/pharma-ml:${{ github.sha }},${{ secrets.ACR_NAME }}.azurecr.io/pharma-ml:latest

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    - name: Set up kubectl
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG_DEV }}
    - name: Deploy to development environment
      run: |
        sed -i 's|$ACR_NAME|${{ secrets.ACR_NAME }}|g' kubemanifest/deployment.yaml
        kubectl apply -f kubemanifest/pvc.yaml
        kubectl apply -f kubemanifest/secret.yaml
        kubectl apply -f kubemanifest/deployment.yaml
        kubectl apply -f kubemanifest/service.yaml

  deploy-prod:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Set up kubectl
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG_PROD }}
    - name: Deploy to production environment
      run: |
        sed -i 's|$ACR_NAME|${{ secrets.ACR_NAME }}|g' kubemanifest/deployment.yaml
        kubectl apply -f kubemanifest/pvc.yaml
        kubectl apply -f kubemanifest/secret.yaml
        kubectl apply -f kubemanifest/deployment.yaml
        kubectl apply -f kubemanifest/service.yaml
